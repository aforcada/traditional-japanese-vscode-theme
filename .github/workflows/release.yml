name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.4.0, 1.3.1, 2.0.0)'
        required: true
        type: string
      changelog:
        description: 'Changelog entry for this release (use \\n for line breaks)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Validate version format
        run: |
          if [[ ! "${{ inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must be in format X.Y.Z (e.g., 1.4.0)"
            exit 1
          fi

      - name: Update package.json version
        run: |
          # Update version in package.json
          jq '.version = "${{ inputs.version }}"' package.json > package.json.tmp
          mv package.json.tmp package.json
          echo "Updated package.json to version ${{ inputs.version }}"

      - name: Update CHANGELOG.md
        run: |
          # Get current date in YYYY-MM-DD format
          RELEASE_DATE=$(date +%Y-%m-%d)
          
          # Prepare changelog entry (convert \n to actual newlines)
          CHANGELOG_ENTRY=$(echo -e "${{ inputs.changelog }}")
          
          # Create new changelog content
          {
            echo "# Changelog"
            echo ""
            echo "## [${{ inputs.version }}] - $RELEASE_DATE"
            echo ""
            echo "$CHANGELOG_ENTRY"
            echo ""
            tail -n +3 CHANGELOG.md
          } > CHANGELOG.md.tmp
          
          mv CHANGELOG.md.tmp CHANGELOG.md
          echo "Updated CHANGELOG.md with version ${{ inputs.version }}"

      - name: Commit version changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json CHANGELOG.md
          git commit -m "chore: release version ${{ inputs.version }}"

      - name: Create and push tag
        run: |
          git tag -a "v${{ inputs.version }}" -m "Release version ${{ inputs.version }}"
          git push origin HEAD:main
          git push origin "v${{ inputs.version }}"

      - name: Package extension
        run: pnpm run package

      - name: Publish to VS Code Marketplace
        env:
          VSCE_PAT: ${{ secrets.VSCE_TOKEN }}
        run: |
          pnpm vsce publish -p $VSCE_PAT

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Prepare changelog entry for release notes
          CHANGELOG_ENTRY=$(echo -e "${{ inputs.changelog }}")
          
          # Find the .vsix file
          VSIX_FILE=$(ls *.vsix | head -1)
          
          # Create release
          gh release create "v${{ inputs.version }}" \
            --title "v${{ inputs.version }}" \
            --notes "$CHANGELOG_ENTRY" \
            "$VSIX_FILE"

      - name: Summary
        run: |
          echo "## Release Summary :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Version **${{ inputs.version }}** has been released successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### What was done:" >> $GITHUB_STEP_SUMMARY
          echo "- 📝 Updated \`package.json\` to version ${{ inputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- 📋 Updated \`CHANGELOG.md\` with release notes" >> $GITHUB_STEP_SUMMARY
          echo "- 🏷️ Created and pushed git tag \`v${{ inputs.version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 Published extension to VS Code Marketplace" >> $GITHUB_STEP_SUMMARY
          echo "- 🎉 Created GitHub release with .vsix file" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next steps:" >> $GITHUB_STEP_SUMMARY
          echo "- Check the [VS Code Marketplace](https://marketplace.visualstudio.com/items?itemName=AdriaForcada.traditional-japanese-vscode-theme)" >> $GITHUB_STEP_SUMMARY
          echo "- View the [GitHub Release](https://github.com/${{ github.repository }}/releases/tag/v${{ inputs.version }})" >> $GITHUB_STEP_SUMMARY
